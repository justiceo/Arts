#!/bin/bash

function svnjam() {
	source_file=$1
	no_of_parts=$2
	echo "no of parts is $no_of_parts"

	total_lines=$( wc -l < $source_file )
	echo "total_lines is $total_lines"

	total_revisions=$( grep revision=\" < $source_file | wc -l )
	echo "total revisions is $total_revisions"

	revision_lines_w_no=$( grep -n revision=\" < $source_file )
	
	#the current part file would be a one unit of the required number of files
	let "selected_revisions = $total_revisions / $no_of_parts"
	echo "selected revisions is $selected_revisions"

	#the part file holds the commit information of data in current part
	part_file=$( echo "$source_file.frag$no_of_parts" )
	echo "part_file is $part_file"
	
	rest_file=$( echo "$source_file.frag" )

	#get revision lines in avro.log take the middle part, take the last element extract the second value
	division_line=$( eval 'cat avro.log | grep -n revision=\" | head -$selected_revisions | tail -1' | cut -d':' -f 1 )
	
	echo "division line is $division_line"

	let "part_file_end = $division_line -2 "
	echo "part_file end is $part_file_end"

	let "rest_file_start = $total_lines - $part_file_end"

	eval "head -$part_file_end < $source_file > $part_file"
	eval "tail -$rest_file_start < $source_file > $rest_file"

	if [[ $no_of_parts > 2 ]]
	then
		let "n = $no_of_parts - 1 "
		#svnjam $rest_file $no_of_parts
		echo "no of parts is $n"
	fi
}

svnjam $1 $2




